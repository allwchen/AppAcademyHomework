c
exit
q
c
@board
@board.render
@board.reveal([0,0])
pos
@board.render
n
c
@board.render
@board[[0,0]].reveal
@board[[0,0]].hide
@board[[0,0]].reveal
@board
c
q
@board[[0, 0]]
@board[0, 0]
@board[0 0]
@board.render
@board
value
n
q
@known_cards
@matched_cards
c
q
n
c
@not_yet_seen_cards
@known_cards
@matched_cards
q
f
finish
@matched_cards.empty?
@matched_cards
prev_guess_pos.empty?
value
prev_guess_pos
q
@matched_cards
@known_cards
c
q
@not_yet_seen_cards
@matched_cards
@known_cards
c
n
pos
n
exit
list
value
@known_cards
wtf
pos2
pos1
c
@not_yet_seen_cards[[2,3]]
@not_yet_seen_cards.keys.shuffle
.shuffle
@not_yet_seen_cards.keys
@not_yet_seen_cards
exit
@not_yet_seen_cards.keys.shuffle
@not_yet_seen_cards.shuffle
@not_yet_seen_cards.keys.shuffle
@not_yet_seen_cards.keys
@not_yet_seen_cards
exit
@board[row][col].face_down==false
@board[row][col]
@board
col < 0
row < 0
col > size-1
row > size-1
col.nil?
row.nil?
size
col
row
exit
c
n
c
0,0
0 0
exit
0 3
c
@board[[0, 0]] == @board[[0,1]]
@board[[0, 1]]
@board[[0, 0]]
@board[0, 0]
@board[0 0]
@board[0][0]
@board[0][1]
@board[[0 1]]
@board[0 1]
@board.render
@board[pos]
@board[@guessed_pos]
n
@board[pos]
@board[@guessed_pos]
pos
@guessed_pos
n
pos
n
@guessed_pos
pos
n
@guessed_pos
pos
n
pos
n
pos
n
pos
exit
pos
@guessed_pos
@board
c
card.face_down
load "card.rb"
card.face_down
card
s
rowArr
s
@board
c
finish
c
exit
@board[row][col]
@board[[row,col]]
@board
col
row
c
exit
x
col
row
